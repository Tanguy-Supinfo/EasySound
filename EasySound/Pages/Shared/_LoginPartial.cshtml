@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post" >
            <button  type="submit" class="nav-link btn btn-link text-dark">Déconnexion</button>
        </form>
    </li>
    <li class="nav-item">
        <span class="navbar-text actions">
            <a class="btn btn-light action-button" role="button" title="Manage" asp-area="Identity" asp-page="/Account/Manage/Index">💽 Mes musiques</a>
        </span>
    </li>
}
else
{

    <span class="navbar-text actions">
        <a class="login" asp-area="Identity" asp-page="/Account/Register">Inscription</a>
        <a class="btn btn-light action-button" role="button" asp-area="Identity" asp-page="/Account/Login">🎧 Mon Espace</a>
    </span>

    <!-- <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Inscription</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Mon Espace</a>
    </li> -->
}
</ul>
